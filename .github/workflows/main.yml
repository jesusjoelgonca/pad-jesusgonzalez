name: Pipeline de Extracción e Ingesta MercadoLibre

on:
  push:
    branches: [ main ]
  workflow_dispatch:    

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Paso 1 - Checkout Repositorio
        uses: actions/checkout@v4

      - name: Paso 2 Login docker GitHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Paso 3 - Configurar la imagen docker
        run: docker build -t contenedor .

      - name: Paso 4 - Ejecutar extractor
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/actividades/actividad1/static/csv":/app/actividades/actividad1/static/csv \
            -v "${{ github.workspace }}/actividades/actividad1/data":/app/actividades/actividad1/data \
            contenedor actividades.actividad1.src.main_extracto

      - name: Paso 5 - Ejecutar ingesta
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/actividades/actividad1/static/csv":/app/actividades/actividad1/static/csv \
            -v "${{ github.workspace }}/actividades/actividad1/static/db":/app/actividades/actividad1/static/db \
            contenedor actividades.actividad1.src.main_ingesta

      - name: Paso 6 - Verificar archivos generados
        run: |
          echo "=== Archivos CSV generados ==="
          ls -la actividades/actividad1/data/ || echo "No hay archivos Data"

      - name: Paso 7 - Subir archivos como artifacts
        uses: actions/upload-artifact@v4
        with:
          name: datos-mercadolibre-${{ github.run_number }}
          path: |
            actividades/actividad1/static/csv/*.csv
            actividades/actividad1/data/*.json
            actividades/actividad1/data/*.png
          retention-days: 30

      - name: Paso 8 - Commit archivos para Streamlit Cloud
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Solo agregar archivos que existen
          git add actividades/actividad1/static/csv/*.csv 2>/dev/null || true
          git add actividades/actividad1/data/*.json 2>/dev/null || true
          git add actividades/actividad1/data/*.png 2>/dev/null || true
          
          # Verificar si hay cambios
          if git diff --staged --quiet; then
            echo "No hay archivos nuevos para Streamlit Cloud"
          else
            git commit -m "🤖 Actualizar datos para Streamlit Cloud $(date '+%Y-%m-%d %H:%M:%S')"
            git push
            echo "✅ Datos enviados a Streamlit Cloud - Se actualizará automáticamente"
          fi

      - name: Paso 9 - Información de Streamlit Cloud
        run: |
          echo "🚀 Streamlit Cloud se actualizará automáticamente"
          echo "🔗 URL de tu app: https://share.streamlit.io"
          echo "📝 Asegúrate de que tu app esté configurada con:"
          echo "   - Repository: ${{ github.repository }}"
          echo "   - Branch: main"
          echo "   - Main file: streamlit_app.py"

      - name: Paso 10 - Mostrar resumen
        run: |
          echo "✅ Pipeline completado"
          echo "📁 Archivos disponibles en Artifacts"
          echo "🔗 Descarga desde: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "🌐 Streamlit Cloud: https://share.streamlit.io"